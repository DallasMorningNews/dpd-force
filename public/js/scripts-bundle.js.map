{"version":3,"sources":["+custom.js"],"names":["$","document","ready","processData","data","forceData","GeoJSON","parse","Point","exclude","console","log","drawMap","map","addSource","type","addLayer","id","source","layout","visibility","paint","circle-radius","stops","circle-color","on","e","features","queryRenderedFeatures","point","layers","length","feature","properties","content","each","k","v","totalIncidents","force_use","i","current_badge_no","click","badge","this","attr","filterBadge","mapboxgl","Popup","setLngLat","geometry","coordinates","setHTML","addTo","flyTo","center","zoom","Math","max","getZoom","getCanvas","style","cursor","setFilter","d","Date","year","getFullYear","text","Map","container","scrollZoom","disable","addControl","Navigation","getJSON"],"mappings":"AAAAA,EAAAC,UAAAC,MAAA,WA+BA,QAAAC,GAAAC,GACAC,UAAAC,QAAAC,MAAAH,GAAAI,OAAA,WAAA,aAAAC,aAEAC,QAAAC,IAAAN,WAEAO,EAAAP,WAKA,QAAAO,GAAAR,GAEAS,EAAAC,UAAA,gBACAC,KAAA,UACAX,KAAAA,IAGAS,EAAAG,UACAC,GAAA,iBACAC,OAAA,eACAH,KAAA,SACAI,QACAC,WAAA,WAEAC,OACAC,iBACAC,QAAA,EAAA,IAAA,GAAA,IAAA,GAAA,KAEAC,eAAA,aAKAX,EAAAY,GAAA,QAAA,SAAAC,GACA,GAAAC,GAAAd,EAAAe,sBAAAF,EAAAG,OAAAC,QAAA,mBAEA,IAAAH,EAAAI,OAAA,CAIA,GAAAC,GAAAL,EAAA,GAKAV,EAAAe,EAAAC,WAAAhB,GACAiB,EAAA,EAEAlC,GAAAmC,KAAA/B,EAAAuB,SAAA,SAAAS,EAAAC,GACA,GAAAA,EAAAJ,WAAAhB,KAAAA,EAAA,CACA,GAAAqB,GAAAD,EAAAJ,WAAAM,UAAAR,MAEA,KAAAS,EAAA,EAAAA,EAAAF,EAAAE,IACAN,GAAA,mCAAAG,EAAAJ,WAAAM,UAAAC,GAAAC,iBAAA,KAAAJ,EAAAJ,WAAAM,UAAAC,GAAAC,iBAAA,aAOAzC,EAAA,UAAA0C,MAAA,WACA,GAAAC,GAAA3C,EAAA4C,MAAAC,KAAA,aACAC,GAAAH,KAIAjC,QAAAC,IAAAqB,IAEA,GAAAe,UAAAC,OACAC,UAAAjB,EAAAkB,SAAAC,aACAC,QAAAlB,GACAmB,MAAAxC,EAEAb,GAAA,UAAA0C,MAAA,WACA,GAAAC,GAAA3C,EAAA4C,MAAAC,KAAA,aACAC,GAAAH,KAGA9B,EAAAyC,OACAC,OAAAvB,EAAAkB,SAAAC,YACAK,KAAAC,KAAAC,IAAA,GAAA7C,EAAA8C,gBAIA9C,EAAAY,GAAA,YAAA,SAAAC,GACA,GAAAC,GAAAd,EAAAe,sBAAAF,EAAAG,OAAAC,QAAA,mBACAjB,GAAA+C,YAAAC,MAAAC,OAAAnC,EAAA,OAAA,UAAA,KAKA,QAAAmB,GAAAH,GACA9B,EAAAkD,UAAA,kBAAA,KAAApB,GAAA,IApHA,GAAAqB,GAAA,GAAAC,MACAC,EAAAF,EAAAG,aAEAnE,GAAA,cAAAoE,KAAAF,EAGA,IAAArD,GAAA,GAAAkC,UAAAsB,KACAC,UAAA,MACAT,MAAA,yCACAN,QAAA,YAAA,YACAC,KAAA,IAGA3C,GAAAY,GAAA,OAAA,WACAZ,EAAA0D,WAAAC,UACA3D,EAAA4D,WAAA,GAAA1B,UAAA2B,YAEA1E,EAAA2E,QAAA,mBAAA,SAAAvE,GACAD,EAAAC,GACAM,QAAAC,IAAAP,OAoGAJ,EAAA,aAAA0C,MAAA,WACAhC,QAAAC,IAAA,QACAE,EAAAkD,UAAA,kBAAA,KAAA,KAAA","file":"scripts-bundle.js","sourcesContent":["$(document).ready(function() {\n\n\t//custom scripting goes here\n\n\t// injecting current year into footer\n\t// DO NOT DELETE\n\n\tvar d = new Date();\n\tvar year = d.getFullYear();\n\n\t$('.copyright').text(year);\n\n\n\tvar map = new mapboxgl.Map({\n\t\tcontainer: \"map\",\n\t\tstyle: 'http://maps.dallasnews.com/styles.json',\n\t\tcenter: [-96.7870228, 32.8255772],\n\t\tzoom: 10\n\t});\n\n\tmap.on(\"load\", function() {\n\t\tmap.scrollZoom.disable();\n\t\tmap.addControl(new mapboxgl.Navigation());\n\n\t\t$.getJSON(\"js/map_data.json\", function(data) {\n\t\t\tprocessData(data);\n\t\t\tconsole.log(data);\n\t\t});\n\n\t});\n\n\tfunction processData(data) {\n\t\tforceData = GeoJSON.parse(data, {Point: [\"latitude\", \"longitude\"], exclude: []});\n\n\t\tconsole.log(forceData);\n\n\t\tdrawMap(forceData);\n\n\t}\n\n\n\tfunction drawMap(data) {\n\n\t\tmap.addSource(\"dpdForceData\", {\n\t\t\ttype: \"geojson\",\n\t\t\tdata: data\n\t\t});\n\n\t\tmap.addLayer({\n\t\t\t\"id\": \"forceIncidents\",\n\t\t\t\"source\": \"dpdForceData\",\n\t\t\t\"type\": \"circle\",\n\t\t\t\"layout\": {\n\t\t\t\t\"visibility\": \"visible\"\n\t\t\t},\n\t\t\t\"paint\": {\n\t\t\t\t\"circle-radius\": {\n\t\t\t\t\tstops:[[8, 2], [11, 4], [15, 8]]\n\t\t\t\t},\n\t\t\t\t\"circle-color\": \"#950000\"\n\t\t\t}\n\t\t});\n\n\n\t\tmap.on(\"click\", function(e) {\n\t\t\tvar features = map.queryRenderedFeatures(e.point, {layers: [\"forceIncidents\"]});\n\n\t\t\tif (!features.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar feature = features[0];\n\n\n\n\n\t\t\tvar id = feature.properties.id;\n\t\t\tvar content = \"\";\n\n\t\t\t$.each(data.features, function(k,v) {\n\t\t\t\tif (v.properties.id === id) {\n\t\t\t\t\tvar totalIncidents = v.properties.force_use.length;\n\n\t\t\t\t\tfor (i = 0; i < totalIncidents; i++) {\n\t\t\t\t\t\tcontent += \"<span class='badge' data-badge='\"+ v.properties.force_use[i].current_badge_no +\"'>\" + v.properties.force_use[i].current_badge_no + \"</span>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\n\n\t\t\t$(\".badge\").click(function() {\n\t\t\t\tvar badge = $(this).attr(\"data-badge\");\n\t\t\t\tfilterBadge(badge);\n\t\t\t});\n\n\n\t\t\tconsole.log(feature);\n\n\t\t\tvar popup = new mapboxgl.Popup()\n\t\t\t\t.setLngLat(feature.geometry.coordinates)\n\t\t\t\t.setHTML(content)\n\t\t\t\t.addTo(map);\n\n\t\t\t$(\".badge\").click(function() {\n\t\t\t\tvar badge = $(this).attr(\"data-badge\");\n\t\t\t\tfilterBadge(badge);\n\t\t\t});\n\n\t\t\tmap.flyTo({\n\t\t\t\tcenter: feature.geometry.coordinates,\n\t\t\t\tzoom: Math.max(14, map.getZoom())\n\t\t\t});\n\t\t});\n\n\t\tmap.on(\"mousemove\", function(e) {\n\t\t\tvar features = map.queryRenderedFeatures(e.point, {layers: [\"forceIncidents\"]});\n\t\t\tmap.getCanvas().style.cursor = (features.length) ? \"pointer\" : \"\";\n\t\t});\n\n\t}\n\n\tfunction filterBadge(badge) {\n\t\tmap.setFilter(\"forceIncidents\", [\"==\", badge, true]);\n\t}\n\n\t$(\".clearMap\").click(function() {\n\t\tconsole.log(\"test\");\n\t\tmap.setFilter(\"forceIncidents\", [\">=\", \"id\", 0]);\n\t});\n\n\n\n});\n"],"sourceRoot":"/source/"}